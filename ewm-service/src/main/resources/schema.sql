CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    name  VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title              VARCHAR(255),
    annotation         VARCHAR(1000)                                                     NOT NULL,
    description        VARCHAR(1000)                                                     NOT NULL,
    category           BIGINT,
    initiator          BIGINT,
    created            TIMESTAMP WITHOUT TIME ZONE,
    published          TIMESTAMP WITHOUT TIME ZONE,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    lat                FLOAT,
    lon                FLOAT,
    paid               BOOLEAN,
    participant_limit  INTEGER,
    request_moderation BOOLEAN,
    state              VARCHAR(25) CHECK (state IN ('PUBLISHED', 'PENDING', 'CANCELED')) NOT NULL,
    FOREIGN KEY (category) REFERENCES categories (id) ON DELETE CASCADE,
    FOREIGN KEY (initiator) REFERENCES users (id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS events_requests
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created   TIMESTAMP WITHOUT TIME ZONE,
    event     BIGINT,
    requester BIGINT,
    status    VARCHAR(25) CHECK (status IN ('CONFIRMED', 'PENDING', 'CANCELED', 'REJECTED')) NOT NULL,
    FOREIGN KEY (event) REFERENCES events (id) ON DELETE CASCADE,
    FOREIGN KEY (requester) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title  VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation BIGINT,
    event       BIGINT,
    PRIMARY KEY (compilation, event),
    FOREIGN KEY (compilation) REFERENCES compilations (id) ON DELETE CASCADE,
    FOREIGN KEY (event) REFERENCES events (id) ON DELETE CASCADE
);
